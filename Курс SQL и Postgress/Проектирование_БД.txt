----------------------------------------ПРОЕКТИРОВАНИЕ БД-----------------------------------------------------------------------
Проблемы плохого проектирования:
-Возможность записи не валидных данных
-возможность потери информации (нет нужных связей)
-отсутсвие необходимой информации(забыли то, что было нужно)

Стадии проектирования:
-Анализ требования предметной областиЖ
    -Разорбрать USE CASES(сценарии использования)
    -Аналитический процесс с участие stackeholders(владьцев, экспертов домена)
    -Строим концептуальную схему БД
-Логическое моделирование данных предметной области:
    -Детализирует концептуальную модель БД
    -Разные источники включают разные компоненты в логическую модель
    -Полностью описывает все ключи
    -Полностью описывает все типы данных
    -Полностью прописывает все логические ограничения(спорно)
    -Нормальзация отношений обычно максимум до формы 3НФ(Третья нормальная форма включает в себя два пункта:
                                                            Таблица должна быть во второй нормальной форме
                                                            Все колонки в таблице зависят от первичного ключа и не зависят друг от друга)
-Физическое проектирование и нормализация
    -Выбирается конкретная СУБД
    -Определяются типы данных
    -Определяются индексы
    -Могут определятся предстваления(views)
    -Определяются ограничения на доступ(security)

По результатм проектирования удобно строить ER diagrams
например:
-pgModeler
-MySQL Workbench
-SQL Power Architect

---------------------------------------БАЗОВЫЕ СОВЕТЫ ПО ПРОЕКТИРОВАНИЮ-----------------------------------------------------
-Таблица: объект, событие, абстракция
-Поле(колонка): свойство объекта
-Запись(строка): совокупность полей
-Значения в каждом поле по отдельности не должны содержать не валидных данных
-Значения в совокупности полей должны быть не противоречивы

ПЛОХИЕ ПРАКТИКИ(так делать нельзя):
-Игнорирования нормализации - избыточность данных
-Отсутсвие стандартов именования на проекте
-Одна таблица для разных по смыслу данных
-Наплевательское отношение к актуальности репрезентации данных
-Поле содержащее более 1 логической части
-Поле содержащее более 1 значения(массив, когда не надо)
-Вычислимое поле
-Неправильно выбранные первичные ключи
-Избегайте композитных PK(может приводить к деградации производительности)
-В идеале, в таблице кроме суррогатного ключа, должен быть и натуральный
-ПРАВИЛА ИНОГДА МОЖНО НАРУШАТЬ!!(насчёт вычислимого поля)
Если вычислимое поле даёт прирост к производительности, то его можно использовать

------------------------------------------НОРМАЛЬНАЯ ФОРМА--------------------------------------------------------------
Нормальная Форма(НФ) - свойство отношения, характеризующее его с точки срезния избыточности

Нормализация - приведение к нормальным формам (процесс минимизации избыточности отношения)

1НФ(Первая Нормальная Форма):
-Нет строк дубликатов
-Все атрибуты простых типов данных
-Все значения скалярные (одно значение просто типа данных)

2НФ(Вторая Нормальная Форма):
-Таблица удовлетворяет 1НФ
-Есть первичный ключ
-Все атрибуты(поля) описывают первичный ключ целиком, а не лишь его часть

3НФ(Третья нормальная Форма):
-Таблица удовлетворяет 2НФ
-Не должно быть зависимости одних ключевых атрибутов от других(все атрибуты зависят только от первичного ключа)

Денормализация — намеренное приведение структуры базы данных в состояние, не соответствующее критериям нормализации,
обычно проводимое с целью ускорения операций чтения из базы за счет добавления избыточных данных

Денормализация помогает избегать лишних joinов, когда все данные в куче, select могут проходить
более быстро
