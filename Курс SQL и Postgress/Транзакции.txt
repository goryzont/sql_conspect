------------------------------------------ТРАНЗАКЦИИ-------------------------------------------------------------------------
Транзакция - логическая группа операций
Транзакция может быть выполнена только целиком

К транзакциям у нас есть набор требований ACID:
-Atomicity(Атомарность) - Транзакция выполняется либо полностью, либо не выполняется вообще
-Consistency(Согласованность) - Согласованность гарантирует что система не сможет провести неразрешённые операции,
нарушить ограничения, триггеры
-Isolation(Изолированность) - Параллельные транзакции не могут прочитать и изменить несогласованные данные,
данные обрабатываемые одной транзакцией изолируются от других транзакций на время требуемое исходной транзакцией
для выполнения всех своих действий. Есть различные уровни изоляций
-Durability(долговеченость) - Если транзакция успешно выполнилась, то никакие сбои не вызовут откат действий

Для управления транзакций существует TCL(Transaction Control Language)

СИНТАКСИС:
START TRANSACTION/BEGIN[TRANSACTION]
...
END[TRANSACTION]/COMMIT


BEGIN/COMMIT - SQL Стандарт
START TRANSACTION/ END - psgSQL Стандарт

ПРИМЕР:
BEGIN
statment1;
statment2;
statment3;
COMMIT;

Все операции в любом случае обёрнуты в транзакции в PostgreSQL

-Если походу транзакции что-то пошло не так её можно откатить использовав ROLLBACK
-Внутри транзакции можно делать "засечки" в "важных" местах с помощью команжы SAVEPOINT savepoint_name
-Откатиться к такой точке можно с помощью ROLLBACK TO savepoint_name

Ограничения в Postgrese:
-Нельзя создавать транзакции в функциях
-Хотя функции неявно исполняются в рамках транзакции
-Чтобы прервать транзакцию изнутри функции - RAISE EXCEPTION


-----------------------------------Изоляция Транзакции. Уровни изоляции---------------------------------------------------------
Проблемы параллельнотси:
-"грязне чтение" - чтение частичных изменений
-неповторяемое чтение - повторное чтение показывает, что данные были изменены после первого чтения
-фантомное чтение - повторное чтение показывает другой результатирующий набор
-аномалия сериализации - результат параллельно выполняемых транзакций может не согласовываться с результатом
этиж же транзакций, выполняемых по очереди

Уровни изоляции:
-Read uncommited(Чтение незафиксированнх данных)
-Read commited(Чтение параллельных данных)
-Repeatable read(Повторяемое чтение)
-Serialible(Сериализуемоесть)

Подходы к изоляции транзакций:
-MVCC(multiversion control system) - изменения версионируются таймштампами
Механизм изоляции ориентируется на таймштампы из-за чего снижает потребность блокировок

Для управления уровнями изоляциями
В начале транзакции
BEGIN ISOLATON LEVEL level

В середине транзакции
SET TRANSACTION ISOLATON LEVEL level
